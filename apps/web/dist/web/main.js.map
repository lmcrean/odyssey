{"version":3,"file":"main.js","mappings":"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","sources":["./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.config.ts","./src/app/app.routes.ts","./src/app/components/hello-world/hello-world.component.ts","./src/app/components/hello-world/hello-world.component.html","./src/app/services/api.service.ts","./src/environments/environment.ts","./src/main.ts"],"sourcesContent":["import { Component } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { HelloWorldComponent } from './components/hello-world/hello-world.component';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  standalone: true,\r\n  imports: [CommonModule, HelloWorldComponent],\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.scss']\r\n})\r\nexport class AppComponent {\r\n  title = 'Competitor Analysis Dashboard';\r\n}","<app-hello-world></app-hello-world>","import { ApplicationConfig } from '@angular/core';\r\nimport { provideRouter } from '@angular/router';\r\nimport { provideHttpClient } from '@angular/common/http';\r\nimport { routes } from './app.routes';\r\n\r\nexport const appConfig: ApplicationConfig = {\r\n  providers: [\r\n    provideRouter(routes),\r\n    provideHttpClient()\r\n  ]\r\n};","import { Routes } from '@angular/router';\r\n\r\nexport const routes: Routes = [\r\n  // Routes will be added in future iterations\r\n];","import { Component, OnInit } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { ApiService } from '../../services/api.service';\r\nimport { HealthResponse } from '@odyssey/shared';\r\n\r\n@Component({\r\n  selector: 'app-hello-world',\r\n  standalone: true,\r\n  imports: [CommonModule],\r\n  templateUrl: './hello-world.component.html',\r\n  styleUrls: ['./hello-world.component.scss']\r\n})\r\nexport class HelloWorldComponent implements OnInit {\r\n  message: string = '';\r\n  healthStatus: HealthResponse | null = null;\r\n  loading: boolean = false;\r\n  error: string = '';\r\n\r\n  constructor(private apiService: ApiService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.loadData();\r\n  }\r\n\r\n  loadData(): void {\r\n    this.loading = true;\r\n    this.error = '';\r\n\r\n    this.apiService.getHealth().subscribe({\r\n      next: (response) => {\r\n        this.message = response;\r\n        this.loadHealthStatus();\r\n      },\r\n      error: (err) => {\r\n        this.error = 'Failed to connect to API: ' + err.message;\r\n        this.loading = false;\r\n      }\r\n    });\r\n  }\r\n\r\n  private loadHealthStatus(): void {\r\n    this.apiService.getHealthStatus().subscribe({\r\n      next: (response) => {\r\n        this.healthStatus = response;\r\n        this.loading = false;\r\n      },\r\n      error: (err) => {\r\n        this.error = 'Failed to load health status: ' + err.message;\r\n        this.loading = false;\r\n      }\r\n    });\r\n  }\r\n\r\n  retry(): void {\r\n    this.loadData();\r\n  }\r\n}","<div class=\"hello-world-container\">\r\n  <h1>Competitor Analysis Dashboard</h1>\r\n  \r\n  <div class=\"api-test-section\">\r\n    <h2>API Connection Test</h2>\r\n    \r\n    <div *ngIf=\"loading\" class=\"loading\">\r\n      Loading...\r\n    </div>\r\n    \r\n    <div *ngIf=\"error\" class=\"error\">\r\n      <p>{{ error }}</p>\r\n      <button (click)=\"retry()\">Retry</button>\r\n    </div>\r\n    \r\n    <div *ngIf=\"!loading && !error\" class=\"success\">\r\n      <div class=\"message-card\">\r\n        <h3>Hello World Message</h3>\r\n        <p>{{ message }}</p>\r\n      </div>\r\n      \r\n      <div class=\"status-card\" *ngIf=\"healthStatus\">\r\n        <h3>API Status</h3>\r\n        <p><strong>Message:</strong> {{ healthStatus.message }}</p>\r\n        <p><strong>Version:</strong> {{ healthStatus.version }}</p>\r\n        <p><strong>Timestamp:</strong> {{ healthStatus.timestamp | date:'medium' }}</p>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { environment } from '../../environments/environment';\r\nimport { HealthResponse } from '@odyssey/shared';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ApiService {\r\n  private readonly baseUrl = environment.apiUrl;\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  getHealth(): Observable<string> {\r\n    return this.http.get(`${this.baseUrl}/api/health`, { responseType: 'text' });\r\n  }\r\n\r\n  getHealthStatus(): Observable<HealthResponse> {\r\n    return this.http.get<HealthResponse>(`${this.baseUrl}/api/health/status`);\r\n  }\r\n}","export const environment = {\r\n  production: false,\r\n  apiUrl: 'http://localhost:5000'\r\n};","import { bootstrapApplication } from '@angular/platform-browser';\r\nimport { appConfig } from './app/app.config';\r\nimport { AppComponent } from './app/app.component';\r\n\r\nbootstrapApplication(AppComponent, appConfig)\r\n  .catch((err) => console.error(err));"],"names":["CommonModule","HelloWorldComponent","AppComponent","constructor","title","selectors","standalone","features","i0","ɵɵStandaloneFeature","decls","vars","template","AppComponent_Template","rf","ctx","ɵɵelement","styles","provideRouter","provideHttpClient","routes","appConfig","providers","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵlistener","HelloWorldComponent_div_7_Template_button_click_3_listener","ɵɵrestoreView","_r1","ctx_r1","ɵɵnextContext","ɵɵresetView","retry","ɵɵadvance","ɵɵtextInterpolate","error","ɵɵtextInterpolate1","healthStatus","message","version","ɵɵpipeBind2","timestamp","ɵɵtemplate","HelloWorldComponent_div_8_div_6_Template","ɵɵproperty","apiService","loading","ngOnInit","loadData","getHealth","subscribe","next","response","loadHealthStatus","err","getHealthStatus","ɵɵdirectiveInject","i1","ApiService","consts","HelloWorldComponent_Template","HelloWorldComponent_div_6_Template","HelloWorldComponent_div_7_Template","HelloWorldComponent_div_8_Template","i2","NgIf","DatePipe","environment","http","baseUrl","apiUrl","get","responseType","ɵɵinject","HttpClient","factory","ɵfac","providedIn","production","bootstrapApplication","catch","console"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}